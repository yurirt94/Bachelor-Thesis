(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     80657,       1502]
NotebookOptionsPosition[     80182,       1480]
NotebookOutlinePosition[     80540,       1496]
CellTagsIndexPosition[     80497,       1493]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData["ClearAll"], "Input",
 CellChangeTimes->{{3.700057672944344*^9, 3.700057675456946*^9}}],

Cell[BoxData["ClearAll"], "Output",
 CellChangeTimes->{3.700057675834073*^9, 3.700057785061064*^9, 
  3.7000578193790703`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"T", "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.699889522477406*^9, 3.6998895237945147`*^9}, {
  3.700057780901271*^9, 3.7000578080191708`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["T", 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox["T", "2"], "*", 
        SuperscriptBox["x", "2"]}]}]], ",", 
     FractionBox[
      RowBox[{"1.5", "*", "T"}], 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox["T", "2"], "*", 
        SuperscriptBox["x", "2"]}]}]], ",", 
     FractionBox["T", 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", "T", ")"}], "2"], "*", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "5"}], ")"}], "2"]}]}]], ",", 
     FractionBox[
      RowBox[{"2", "*", "T"}], 
      RowBox[{"1", "+", 
       RowBox[{"4", "*", 
        SuperscriptBox["T", "2"], "*", 
        SuperscriptBox["x", "2"]}]}]], ",", 
     FractionBox[
      RowBox[{"2", "T"}], 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "T"}], ")"}], "2"], "*", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "5"}], ")"}], "2"]}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "15"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.699889534312533*^9, 3.699889658639462*^9}, {
  3.699889700986164*^9, 3.6998897043606367`*^9}, {3.699889752533855*^9, 
  3.699889792629901*^9}, {3.699957910036336*^9, 3.699957914950684*^9}, {
  3.6999582207591267`*^9, 3.6999582528868017`*^9}, {3.6999583670578938`*^9, 
  3.699958426960657*^9}, {3.699958510477337*^9, 3.699958535861215*^9}, {
  3.699958796402742*^9, 3.699958798482531*^9}, {3.6999588628657703`*^9, 
  3.699958980205926*^9}, {3.699959123494009*^9, 3.6999591440022163`*^9}, {
  3.700057580872818*^9, 3.700057716508334*^9}, {3.70005783651655*^9, 
  3.700057850578867*^9}, {3.700060027218953*^9, 3.700060036466161*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
lUaUCDvC/wDx3JJv
          "]]}, 
        Annotation[#, "Charting`Private`Tag$4864#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
JusJ/wOnX64I
          "]]}, Annotation[#, "Charting`Private`Tag$4864#2"]& ], 
       
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwlmXc0F/73x63sMrP3ng0lZNxblCIjRNkRoSEyColCkYyshMyQUCgSn97v
hCQ7I3tlj7dsZXz9zu+v13mce88d53XOvc/XeQnbuRo5UJCRkc2Rk5H932l5
eXh+Z0eU+Pt3eVyZoDsM8lgusm6KEqv/Sl1zE3MHu/bOFfF1UaL1F1NueWl3
cNJu2NRdECV+VvtGmafgDrfly+ifD4kS42j2yn065Q5hG+ESh76IEssM6rKO
XneH8mhla9sHosTOA5XyiZ/cgaMqspFIJUq0PXwzxNzqNmhrdPvbLAsTGT2y
4U+vB3Drr9EwrAoRV6Rio0JdvMBwkuLu1Q1B4n9RpvVyAnfA4preI48+fqKQ
3IaO9GEfyN1/4lTSKC/x4P3D2X22fjC66pJ7j8hNzLj9b1GK9T4kUt2wM8/h
JGopyYka7Q2EaBWuBsPi/cSsl3vpZ/IfgNerjR6KGDbi2dNexYKlQZCiHJTY
lMBC/Ck8bKY/FwL3FxqtpPWYiKaavrmcXqFw9GPGNT01JmLk0/SRncBQmLzv
fddNlonoorPjuvA0FIyYhOPK6ZiIDBfNM6dfhYLYAY+Gs7X7iG+czLS1OkOh
7hqPqgvsIxbNfr4ToxwGzBOOXG8O7yU23pDc30v5BNL6d9rkOBiI6T5nhLZK
wyFi/nyhGzUDsXt6sfVMdTjc28kMLV2lJ84+9C1NaQ0Hc+EziF30xOrOHRX7
2XBgd4gqMH5OT3QbGOa2FnkKobNCj3146IlaN3538EQ9Bfd/J9TrBOiIK+c9
BUjuEaDFHZRjL0lDlFfJmNknFwXTvTs2phw0RJNjDCV5R6Mg6qUv19k9NMQo
OTcjPfUo6BO9HXpglJqY0iV0LEc/CjwO2F3beElNFFdPtSp0i4IsTTwYyUFN
NEkNKWIujwKqm5uln/bsIeYmGmda6EVDdZVHLctvCqJVUZDm0NNn0HQ657zJ
TwriBC05BT5/Br/qu/viqyiIv4LdnXIznsFsm8YSbzoF0b8jxjim7BmwjdIK
SVhTEF8s6he3DT8DO8qUu8d/kRN7VZiOkynHwI5mjZx9AxmRv4z/hfVMDHiE
yUo4O28RnP5IMSXfioNNsSddB3W2CCV3pUSS/eIgiDD9eFVmi+BGVaac/TgO
YpZfzzyc3ST8YO1J/pUWB8XWUkUvXTcJzf47PmWtcbCgIK7W7vmPEPP6RNRV
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$4864#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$4864#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$4864#5"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FractionBox["T", 
        RowBox[{"1", "+", 
          RowBox[{
            SuperscriptBox["T", "2"], " ", 
            SuperscriptBox["x", "2"]}]}]], 
       FractionBox[
        RowBox[{"1.5`", " ", "T"}], 
        RowBox[{"1", "+", 
          RowBox[{
            SuperscriptBox["T", "2"], " ", 
            SuperscriptBox["x", "2"]}]}]], 
       FractionBox["T", 
        RowBox[{"1", "+", 
          RowBox[{
            SuperscriptBox["T", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
               RowBox[{"x", "-", "5"}], ")"}], "2"]}]}]], 
       FractionBox[
        RowBox[{"2", " ", "T"}], 
        RowBox[{"1", "+", 
          RowBox[{"4", " ", 
            SuperscriptBox["T", "2"], " ", 
            SuperscriptBox["x", "2"]}]}]], 
       FractionBox[
        RowBox[{"2", " ", "T"}], 
        RowBox[{"1", "+", 
          RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
               RowBox[{"2", " ", "T"}], ")"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
               RowBox[{"x", "-", "5"}], ")"}], "2"]}]}]]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6999590034108047`*^9, {3.699959107236648*^9, 3.6999591462126007`*^9}, {
   3.700057594565956*^9, 3.700057627247807*^9}, {3.700057657646969*^9, 
   3.7000577169763517`*^9}, 3.7000577852018147`*^9, 3.700057821916437*^9, 
   3.7000578525542793`*^9, 3.70006003721346*^9}]
}, Open  ]]
},
WindowSize->{1280, 674},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 100, 1, 32, "Input"],
Cell[683, 25, 126, 2, 32, "Output"]
}, Open  ]],
Cell[824, 30, 186, 4, 32, "Input"],
Cell[CellGroupData[{
Cell[1035, 38, 2003, 53, 53, "Input"],
Cell[3041, 93, 77125, 1384, 573, "Output"]
}, Open  ]]
}
]
*)

